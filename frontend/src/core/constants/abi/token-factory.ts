const abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'treasuryAddress',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenCreatorBonus',
        type: 'uint256',
      },
      { internalType: 'uint256', name: 'platformFee', type: 'uint256' },
      { internalType: 'address', name: '_lzEndpoint', type: 'address' },
      { internalType: 'uint256', name: 'initialPrice', type: 'uint256' },
      {
        internalType: 'address',
        name: '_uniswapV2Factory',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_uniswapV2Router',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [{ internalType: 'address', name: 'target', type: 'address' }],
    name: 'AddressEmptyCode',
    type: 'error',
  },
  {
    inputs: [{ internalType: 'address', name: 'account', type: 'address' }],
    name: 'AddressInsufficientBalance',
    type: 'error',
  },
  { inputs: [], name: 'FailedInnerCall', type: 'error' },
  { inputs: [], name: 'FailedToSendETH', type: 'error' },
  { inputs: [], name: 'FundingAlreadyRaised', type: 'error' },
  { inputs: [], name: 'IncorrectAddress', type: 'error' },
  { inputs: [], name: 'IncorrectETHSent', type: 'error' },
  { inputs: [], name: 'InvalidDelegate', type: 'error' },
  { inputs: [], name: 'InvalidEndpointCall', type: 'error' },
  {
    inputs: [{ internalType: 'uint16', name: 'optionType', type: 'uint16' }],
    name: 'InvalidOptionType',
    type: 'error',
  },
  { inputs: [], name: 'InvalidTokenCreation', type: 'error' },
  { inputs: [], name: 'LzTokenUnavailable', type: 'error' },
  {
    inputs: [{ internalType: 'uint32', name: 'eid', type: 'uint32' }],
    name: 'NoPeer',
    type: 'error',
  },
  { inputs: [], name: 'NotEnoughAvailableSupply', type: 'error' },
  {
    inputs: [{ internalType: 'uint256', name: 'msgValue', type: 'uint256' }],
    name: 'NotEnoughNative',
    type: 'error',
  },
  {
    inputs: [{ internalType: 'address', name: 'addr', type: 'address' }],
    name: 'OnlyEndpoint',
    type: 'error',
  },
  {
    inputs: [
      { internalType: 'uint32', name: 'eid', type: 'uint32' },
      { internalType: 'bytes32', name: 'sender', type: 'bytes32' },
    ],
    name: 'OnlyPeer',
    type: 'error',
  },
  {
    inputs: [{ internalType: 'address', name: 'owner', type: 'address' }],
    name: 'OwnableInvalidOwner',
    type: 'error',
  },
  {
    inputs: [{ internalType: 'address', name: 'account', type: 'address' }],
    name: 'OwnableUnauthorizedAccount',
    type: 'error',
  },
  { inputs: [], name: 'ReentrancyGuardReentrantCall', type: 'error' },
  {
    inputs: [
      { internalType: 'uint8', name: 'bits', type: 'uint8' },
      { internalType: 'uint256', name: 'value', type: 'uint256' },
    ],
    name: 'SafeCastOverflowedUintDowncast',
    type: 'error',
  },
  {
    inputs: [{ internalType: 'address', name: 'token', type: 'address' }],
    name: 'SafeERC20FailedOperation',
    type: 'error',
  },
  { inputs: [], name: 'SlippageExceeded', type: 'error' },
  { inputs: [], name: 'TokenNotLaunched', type: 'error' },
  { inputs: [], name: 'TokenNotListed', type: 'error' },
  { inputs: [], name: 'UserBuyLimitExceeded', type: 'error' },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint32',
        name: 'srcEid',
        type: 'uint32',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'memeTokenAddress',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'tokenQty',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'ethAmount',
        type: 'uint256',
      },
    ],
    name: 'BoughtCrosschainMemeToken',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'memeTokenAddress',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'tokenQty',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'ethAmount',
        type: 'uint256',
      },
    ],
    name: 'BoughtMemeToken',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'tokenAddress',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'creator',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'name',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'symbol',
        type: 'string',
      },
    ],
    name: 'CreatedMemeToken',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint32',
        name: 'eid',
        type: 'uint32',
      },
      {
        indexed: false,
        internalType: 'bytes32',
        name: 'peer',
        type: 'bytes32',
      },
    ],
    name: 'PeerSet',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint32',
        name: 'srcEid',
        type: 'uint32',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'memeTokenAddress',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'tokenQty',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'ethAmount',
        type: 'uint256',
      },
    ],
    name: 'SoldCrosschainMemeToken',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'memeTokenAddress',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'tokenQty',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'ethAmount',
        type: 'uint256',
      },
    ],
    name: 'SoldMemeToken',
    type: 'event',
  },
  {
    inputs: [{ internalType: 'address', name: '', type: 'address' }],
    name: 'addressToMemeTokenMapping',
    outputs: [
      { internalType: 'string', name: 'name', type: 'string' },
      { internalType: 'string', name: 'symbol', type: 'string' },
      { internalType: 'string', name: 'description', type: 'string' },
      { internalType: 'string', name: 'tokenImageUrl', type: 'string' },
      { internalType: 'uint256', name: 'fundingRaised', type: 'uint256' },
      { internalType: 'bool', name: 'isFundingFinished', type: 'bool' },
      { internalType: 'address', name: 'tokenAddress', type: 'address' },
      {
        internalType: 'address',
        name: 'creatorAddress',
        type: 'address',
      },
      {
        components: [
          { internalType: 'uint256', name: 'k', type: 'uint256' },
          {
            internalType: 'uint256',
            name: 'initialPrice',
            type: 'uint256',
          },
          { internalType: 'uint256', name: 'maxSupply', type: 'uint256' },
          {
            internalType: 'uint256',
            name: 'salesRatio',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'reservedRatio',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'liquidityPoolRatio',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'launchDate',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'maximumPerUser',
            type: 'uint256',
          },
        ],
        internalType: 'struct TokenFactory.AdvancedInfo',
        name: 'advancedInfo',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          { internalType: 'uint32', name: 'srcEid', type: 'uint32' },
          { internalType: 'bytes32', name: 'sender', type: 'bytes32' },
          { internalType: 'uint64', name: 'nonce', type: 'uint64' },
        ],
        internalType: 'struct Origin',
        name: 'origin',
        type: 'tuple',
      },
    ],
    name: 'allowInitializePath',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint32', name: '_dstEid', type: 'uint32' },
      {
        internalType: 'bytes32',
        name: 'memeTokenAddress',
        type: 'bytes32',
      },
      {
        internalType: 'bytes32',
        name: 'recipientAddress',
        type: 'bytes32',
      },
      { internalType: 'uint128', name: 'ethAmount', type: 'uint128' },
    ],
    name: 'buyCrosschainMemetoken',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'memeTokenAddress',
        type: 'address',
      },
      { internalType: 'uint256', name: 'tokenQty', type: 'uint256' },
    ],
    name: 'buyMemeToken',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'memeTokenAddress',
        type: 'address',
      },
      { internalType: 'uint256', name: 'tokenQtyMin', type: 'uint256' },
    ],
    name: 'buyMemeTokenInEth',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'string', name: 'name', type: 'string' },
      { internalType: 'string', name: 'symbol', type: 'string' },
      { internalType: 'string', name: 'imageUrl', type: 'string' },
      { internalType: 'string', name: 'description', type: 'string' },
      { internalType: 'uint256', name: 'k', type: 'uint256' },
      { internalType: 'uint256', name: 'initialPrice', type: 'uint256' },
      { internalType: 'uint256', name: 'maxSupply', type: 'uint256' },
      { internalType: 'uint256', name: 'salesRatio', type: 'uint256' },
      { internalType: 'uint256', name: 'reservedRatio', type: 'uint256' },
      {
        internalType: 'uint256',
        name: 'liquidityPoolRatio',
        type: 'uint256',
      },
      { internalType: 'uint256', name: 'launchDate', type: 'uint256' },
      { internalType: 'uint256', name: 'maximumPerUser', type: 'uint256' },
    ],
    name: 'createMemeToken',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'endpoint',
    outputs: [
      {
        internalType: 'contract ILayerZeroEndpointV2',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'memeTokenAddress',
        type: 'address',
      },
    ],
    name: 'getCurrentTokenPrice',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'memeTokenAddress',
        type: 'address',
      },
      { internalType: 'uint256', name: 'tokenQty', type: 'uint256' },
    ],
    name: 'getEthAmountOnSell',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'memeTokenAddress',
        type: 'address',
      },
      { internalType: 'uint256', name: 'tokenQty', type: 'uint256' },
    ],
    name: 'getRequiredEth',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'memeTokenAddress',
        type: 'address',
      },
      { internalType: 'uint256', name: 'ethAmount', type: 'uint256' },
    ],
    name: 'getTokenOutOnBuy',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          { internalType: 'uint32', name: 'srcEid', type: 'uint32' },
          { internalType: 'bytes32', name: 'sender', type: 'bytes32' },
          { internalType: 'uint64', name: 'nonce', type: 'uint64' },
        ],
        internalType: 'struct Origin',
        name: '',
        type: 'tuple',
      },
      { internalType: 'bytes', name: '', type: 'bytes' },
      { internalType: 'address', name: '_sender', type: 'address' },
    ],
    name: 'isComposeMsgSender',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          { internalType: 'uint32', name: 'srcEid', type: 'uint32' },
          { internalType: 'bytes32', name: 'sender', type: 'bytes32' },
          { internalType: 'uint64', name: 'nonce', type: 'uint64' },
        ],
        internalType: 'struct Origin',
        name: '_origin',
        type: 'tuple',
      },
      { internalType: 'bytes32', name: '_guid', type: 'bytes32' },
      { internalType: 'bytes', name: '_message', type: 'bytes' },
      { internalType: 'address', name: '_executor', type: 'address' },
      { internalType: 'bytes', name: '_extraData', type: 'bytes' },
    ],
    name: 'lzReceive',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint32', name: '', type: 'uint32' },
      { internalType: 'bytes32', name: '', type: 'bytes32' },
    ],
    name: 'nextNonce',
    outputs: [{ internalType: 'uint64', name: 'nonce', type: 'uint64' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'oAppVersion',
    outputs: [
      { internalType: 'uint64', name: 'senderVersion', type: 'uint64' },
      { internalType: 'uint64', name: 'receiverVersion', type: 'uint64' },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint32', name: 'eid', type: 'uint32' }],
    name: 'peers',
    outputs: [{ internalType: 'bytes32', name: 'peer', type: 'bytes32' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint32', name: '_dstEid', type: 'uint32' },
      {
        internalType: 'bytes32',
        name: 'memeTokenAddress',
        type: 'bytes32',
      },
      {
        internalType: 'bytes32',
        name: 'recipientAddress',
        type: 'bytes32',
      },
      { internalType: 'uint128', name: 'ethAmount', type: 'uint128' },
    ],
    name: 'quoteBuyCrossChainMemetoken',
    outputs: [
      { internalType: 'uint256', name: 'nativeFee', type: 'uint256' },
      { internalType: 'uint256', name: 'lzTokenFee', type: 'uint256' },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint32', name: '_dstEid', type: 'uint32' },
      {
        internalType: 'bytes32',
        name: 'memeTokenAddress',
        type: 'bytes32',
      },
      {
        internalType: 'bytes32',
        name: 'recipientAddress',
        type: 'bytes32',
      },
      { internalType: 'uint256', name: 'tokenQty', type: 'uint256' },
    ],
    name: 'quoteSellCrossChainMemetoken',
    outputs: [
      { internalType: 'uint256', name: 'nativeFee', type: 'uint256' },
      { internalType: 'uint256', name: 'lzTokenFee', type: 'uint256' },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint32', name: '_dstEid', type: 'uint32' },
      {
        internalType: 'bytes32',
        name: 'memeTokenAddress',
        type: 'bytes32',
      },
      {
        internalType: 'bytes32',
        name: 'recipientAddress',
        type: 'bytes32',
      },
      { internalType: 'uint256', name: 'tokenQty', type: 'uint256' },
    ],
    name: 'sellCrosschainMemetoken',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'memeTokenAddress',
        type: 'address',
      },
      { internalType: 'uint256', name: 'tokenQty', type: 'uint256' },
    ],
    name: 'sellMemeToken',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: '_delegate', type: 'address' }],
    name: 'setDelegate',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint32', name: '_eid', type: 'uint32' },
      { internalType: 'bytes32', name: '_peer', type: 'bytes32' },
    ],
    name: 'setPeer',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'newOwner', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
]

export default abi
